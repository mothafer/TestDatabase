<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="DESKTOP-4ENFGKI" failures="0" tests="53" name="dbtesting1.mytest" time="8.167" errors="3" timestamp="2024-08-31T14:34:17 EET" skipped="1">
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.062"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.098"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.006">
    <error message="Duplicate entry &#039;432&#039; for key &#039;customers.PRIMARY&#039;" type="java.sql.SQLIntegrityConstraintViolationException">
      <![CDATA[java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '432' for key 'customers.PRIMARY'
at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:109)
at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)
at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1537)
at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2384)
at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1410)
at dbtesting1.mytest.AddData(mytest.java:47)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </error>
  </testcase> <!-- AddData -->
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.035"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.242"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.041"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.197"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.442"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.074"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.005">
    <error message="Duplicate entry &#039;385&#039; for key &#039;customers.PRIMARY&#039;" type="java.sql.SQLIntegrityConstraintViolationException">
      <![CDATA[java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '385' for key 'customers.PRIMARY'
at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:109)
at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)
at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1537)
at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2384)
at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1410)
at dbtesting1.mytest.AddData(mytest.java:47)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </error>
  </testcase> <!-- AddData -->
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.072"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.144"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.041"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.118"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.052"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.086"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.163"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.308"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.053"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.064"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.133"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.054"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.064"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.075"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.041"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.072"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.196"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.332"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.053"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.096"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.164"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.053"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.175"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.102"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.042"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.074"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.095"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.041"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.045"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.119"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.204"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.053"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.103"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.140"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.098"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.428"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.186"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="2.147">
    <error message="Duplicate entry &#039;80&#039; for key &#039;customers.PRIMARY&#039;" type="java.sql.SQLIntegrityConstraintViolationException">
      <![CDATA[java.sql.SQLIntegrityConstraintViolationException: Duplicate entry '80' for key 'customers.PRIMARY'
at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:109)
at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)
at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1537)
at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2384)
at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1410)
at dbtesting1.mytest.AddData(mytest.java:47)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </error>
  </testcase> <!-- AddData -->
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.074"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="AddData" time="0.041"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="updateData" time="0.157"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="GetData" time="0.207"/>
  <system-out/>
  <testcase classname="dbtesting1.mytest" name="deleteData">
    <skipped/>
  </testcase> <!-- deleteData -->
  <system-out/>
</testsuite> <!-- dbtesting1.mytest -->
